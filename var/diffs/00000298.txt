diff --git a/6cad7b0eec86965470375f8748130f1f20b1a81e b/c295d12a2ae52be92461eaf54b022d6d6d41f721
index 6cad7b0eec..c295d12a2a 100644
--- a/6cad7b0eec86965470375f8748130f1f20b1a81e
+++ b/c295d12a2ae52be92461eaf54b022d6d6d41f721
@@ -1,21 +1,21 @@
 /**
  * Tests the {@code CreateDirectoryOps} and the {@code DirectoryCreated} counters when creating a
  * directory.
  *
  * @throws Exception if creating a directory fails
  */
 @Test
 public void mkdirTest() throws Exception {
     mFileSystemMaster.mkdir(DIRECTORY_URI, CreateDirectoryOptions.defaults());
-    Assert.assertEquals(1, mCounters.get("CreateDirectoryOps").getCount());
-    Assert.assertEquals(1, mCounters.get("DirectoriesCreated").getCount());
+    Assert.assertEquals(1, mCounters.get(MasterSource.CREATE_DIRECTORY_OPS).getCount());
+    Assert.assertEquals(1, mCounters.get(MasterSource.DIRECTORIES_CREATED).getCount());
     // trying to create a directory that already exist
     try {
         mFileSystemMaster.mkdir(DIRECTORY_URI, CreateDirectoryOptions.defaults());
         Assert.fail("create a directory that already exist must throw an exception");
     } catch (FileAlreadyExistsException e) {
     // do nothing
     }
-    Assert.assertEquals(2, mCounters.get("CreateDirectoryOps").getCount());
-    Assert.assertEquals(1, mCounters.get("DirectoriesCreated").getCount());
+    Assert.assertEquals(2, mCounters.get(MasterSource.CREATE_DIRECTORY_OPS).getCount());
+    Assert.assertEquals(1, mCounters.get(MasterSource.DIRECTORIES_CREATED).getCount());
 }
\ No newline at end of file