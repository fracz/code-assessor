diff --git a/f9a83348a89a9d60ba2ab36ced065863b9c645bc b/d32d6bd040aed80df5f03c0c9b8b9f5f94150b2b
index f9a83348a8..d32d6bd040 100644
--- a/f9a83348a89a9d60ba2ab36ced065863b9c645bc
+++ b/d32d6bd040aed80df5f03c0c9b8b9f5f94150b2b
@@ -1,16 +1,16 @@
 // This method returns the supertype of the first parameter that has the same constructor
 // as the second parameter, applying the substitution of type arguments to it
 @Nullable
 private Type findCorrespondingSupertype(Type subtype, Type supertype) {
     TypeConstructor constructor = subtype.getConstructor();
     if (constructor.equals(supertype.getConstructor())) {
         return subtype;
     }
     for (Type immediateSupertype : constructor.getSupertypes()) {
         Type correspondingSupertype = findCorrespondingSupertype(immediateSupertype, supertype);
         if (correspondingSupertype != null) {
-            return substituteInType(getSubstitutionContext(subtype), correspondingSupertype, Variance.INVARIANT);
+            return TypeSubstitutor.INSTANCE.substitute(subtype, correspondingSupertype, Variance.INVARIANT);
         }
     }
     return null;
 }
\ No newline at end of file