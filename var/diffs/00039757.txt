diff --git a/36f1300fc9afb7bb5fb447046d28b369dcb8f2b4 b/d1fc53cf508e9b5965236395c52361d4b50f5ebc
index 36f1300fc9..d1fc53cf50 100644
--- a/36f1300fc9afb7bb5fb447046d28b369dcb8f2b4
+++ b/d1fc53cf508e9b5965236395c52361d4b50f5ebc
@@ -1,11 +1,11 @@
 @Override
-public NodePropertyExistenceConstraint nodePropertyExistenceConstraintCreate(KernelStatement state, int labelId, int propertyKey) throws AlreadyConstrainedException, CreateConstraintFailureException {
-    Iterator<NodePropertyConstraint> constraints = schemaReadDelegate.constraintsGetForLabelAndPropertyKey(state, labelId, propertyKey);
+public NodePropertyExistenceConstraint nodePropertyExistenceConstraintCreate(KernelStatement state, NodePropertyDescriptor descriptor) throws AlreadyConstrainedException, CreateConstraintFailureException {
+    Iterator<NodePropertyConstraint> constraints = schemaReadDelegate.constraintsGetForLabelAndPropertyKey(state, descriptor);
     while (constraints.hasNext()) {
         NodePropertyConstraint constraint = constraints.next();
         if (constraint instanceof NodePropertyExistenceConstraint) {
             throw new AlreadyConstrainedException(constraint, OperationContext.CONSTRAINT_CREATION, new StatementTokenNameLookup(state.readOperations()));
         }
     }
-    return schemaWriteDelegate.nodePropertyExistenceConstraintCreate(state, labelId, propertyKey);
+    return schemaWriteDelegate.nodePropertyExistenceConstraintCreate(state, descriptor);
 }
\ No newline at end of file