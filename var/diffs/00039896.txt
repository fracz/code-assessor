diff --git a/e350a9a155119e40709729aea78b448267b679f8 b/3986c4c0ca405489dc46ccda8f11c845b4936cca
index e350a9a155..3986c4c0ca 100644
--- a/e350a9a155119e40709729aea78b448267b679f8
+++ b/3986c4c0ca405489dc46ccda8f11c845b4936cca
@@ -1,20 +1,19 @@
 @Test
 public void shouldRecoverIndexCountsBySamplingThemOnStartup() {
     // given some aliens in a database
     createAliens();
     // that have been indexed
     awaitIndexOnline(indexAliensBySpecimen());
     // where ALIEN and SPECIMEN are both the first ids of their kind
-    int labelId = labelId(ALIEN);
-    int pkId = pkId(SPECIMEN);
+    IndexDescriptor index = IndexDescriptorFactory.from(new NodePropertyDescriptor(labelId(ALIEN), pkId(SPECIMEN)));
     // for which we don't have index counts
-    resetIndexCounts(labelId, pkId);
+    resetIndexCounts(index);
     // when we shutdown the database and restart it
     restart();
     // then we should have re-sampled the index
     CountsTracker tracker = neoStores().getCounts();
-    assertEqualRegisters("Unexpected updates and size for the index", newDoubleLongRegister(0, 32), tracker.indexUpdatesAndSize(labelId, pkId, newDoubleLongRegister()));
-    assertEqualRegisters("Unexpected sampling result", newDoubleLongRegister(16, 32), tracker.indexSample(labelId, pkId, newDoubleLongRegister()));
+    assertEqualRegisters("Unexpected updates and size for the index", newDoubleLongRegister(0, 32), tracker.indexUpdatesAndSize(index, newDoubleLongRegister()));
+    assertEqualRegisters("Unexpected sampling result", newDoubleLongRegister(16, 32), tracker.indexSample(index, newDoubleLongRegister()));
     // and also
     assertLogExistsForRecoveryOn(":Alien(specimen)");
 }
\ No newline at end of file