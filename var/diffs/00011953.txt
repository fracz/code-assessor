diff --git a/a1da3549e7d83a738f042d07a3230ca6a0a60861 b/599638c7be06fec333c0246426324b688193d1bf
index a1da3549e7..599638c7be 100644
--- a/a1da3549e7d83a738f042d07a3230ca6a0a60861
+++ b/599638c7be06fec333c0246426324b688193d1bf
@@ -1,7 +1,11 @@
-protected static List<String> buildDebugCommandLine(AbstractPythonRunConfiguration configuration) throws ExecutionException {
-    final Executor executor = DefaultDebugExecutor.getDebugExecutorInstance();
-    final PythonCommandLineState state = (PythonCommandLineState) configuration.getState(executor, new ExecutionEnvironment());
-    PyDebugRunner debugRunner = (PyDebugRunner) RunnerRegistry.getInstance().findRunnerById(PyDebugRunner.PY_DEBUG_RUNNER);
-    final GeneralCommandLine generalCommandLine = state.generateCommandLine(debugRunner.createCommandLinePatchers(state, configuration, PORT));
-    return generalCommandLine.getParametersList().getList();
+protected static List<String> buildDebugCommandLine(AbstractPythonRunConfiguration configuration) {
+    try {
+        final Executor executor = DefaultDebugExecutor.getDebugExecutorInstance();
+        final PythonCommandLineState state = (PythonCommandLineState) configuration.getState(executor, new ExecutionEnvironment());
+        PyDebugRunner debugRunner = (PyDebugRunner) RunnerRegistry.getInstance().findRunnerById(PyDebugRunner.PY_DEBUG_RUNNER);
+        final GeneralCommandLine generalCommandLine = state.generateCommandLine(debugRunner.createCommandLinePatchers(state, configuration, PORT));
+        return generalCommandLine.getParametersList().getList();
+    } catch (ExecutionException e) {
+        throw new RuntimeException(e);
+    }
 }
\ No newline at end of file