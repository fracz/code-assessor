diff --git a/bfd6d932434114fb1439f40c9f430f7e4dc4bcf5 b/dbba19073ef1a7b5b09d9c557fc9c7bc9b52b47c
index bfd6d93243..dbba19073e 100644
--- a/bfd6d932434114fb1439f40c9f430f7e4dc4bcf5
+++ b/dbba19073ef1a7b5b09d9c557fc9c7bc9b52b47c
@@ -1,14 +1,14 @@
 private boolean isProxyException(URI uri) {
     String uriHost = uri.getHost();
-    if (StringUtil.isEmptyOrSpaces(uriHost))
+    if (StringUtil.isEmptyOrSpaces(uriHost) || StringUtil.isEmptyOrSpaces(myHttpConfigurable.PROXY_EXCEPTIONS)) {
         return false;
-    if (StringUtil.isEmptyOrSpaces(myHttpConfigurable.PROXY_EXCEPTIONS))
-        return false;
-    final List<String> hosts = StringUtil.split(myHttpConfigurable.PROXY_EXCEPTIONS, ",");
+    }
+    List<String> hosts = StringUtil.split(myHttpConfigurable.PROXY_EXCEPTIONS, ",");
     for (String hostPattern : hosts) {
-        final String regexpPattern = StringUtil.escapeToRegexp(hostPattern.trim()).replace("\\*", ".*");
-        if (Pattern.compile(regexpPattern).matcher(uriHost).matches())
+        String regexpPattern = StringUtil.escapeToRegexp(hostPattern.trim()).replace("\\*", ".*");
+        if (Pattern.compile(regexpPattern).matcher(uriHost).matches()) {
             return true;
+        }
     }
     return false;
 }
\ No newline at end of file