diff --git a/49aabe4b54cd0d62f690d12d5439180c392b97dd b/9b868b40d6c1f390f241f2f1d8825fb4d7eb0296
index 49aabe4b54..9b868b40d6 100644
--- a/49aabe4b54cd0d62f690d12d5439180c392b97dd
+++ b/9b868b40d6c1f390f241f2f1d8825fb4d7eb0296
@@ -1,17 +1,21 @@
 @Nullable
 public PsiClass getContainingClass() {
-    AccessToken accessToken = ApplicationManager.getApplication().acquireReadActionLock();
-    try {
-        final GrTypeElement typeElement = GroovyPsiElementFactory.getInstance(myProject).createTypeElement(myContainingClassName);
-        if (typeElement == null)
-            return null;
-        final PsiType type = typeElement.getType();
-        if (!(type instanceof PsiClassType))
-            return null;
-        return ((PsiClassType) type).resolve();
-    } catch (IncorrectOperationException e) {
-        return null;
-    } finally {
-        accessToken.finish();
-    }
+    return ApplicationManager.getApplication().runReadAction(new Computable<PsiClass>() {
+
+        @Override
+        public PsiClass compute() {
+            try {
+                final GrTypeElement typeElement = GroovyPsiElementFactory.getInstance(getProject()).createTypeElement(myContainingClassName);
+                if (typeElement == null)
+                    return null;
+                final PsiType type = typeElement.getType();
+                if (!(type instanceof PsiClassType))
+                    return null;
+                return ((PsiClassType) type).resolve();
+            } catch (IncorrectOperationException e) {
+                LOG.error(e);
+                return null;
+            }
+        }
+    });
 }
\ No newline at end of file