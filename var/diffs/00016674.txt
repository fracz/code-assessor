diff --git a/eaef6591e8636d75a6f7579405c5750dfd1b3e57 b/3dcc1b565f142211f80096fcc14211bb45a26962
index eaef6591e8..3dcc1b565f 100644
--- a/eaef6591e8636d75a6f7579405c5750dfd1b3e57
+++ b/3dcc1b565f142211f80096fcc14211bb45a26962
@@ -1,15 +1,17 @@
 @Nullable
 static /* package */
-VirtualFileKotlinClass create(@NotNull VirtualFile file) {
+VirtualFileKotlinClass create(@NotNull final VirtualFile file) {
     assert file.getFileType() == JavaClassFileType.INSTANCE : "Trying to read binary data from a non-class file " + file;
     try {
-        byte[] fileContents = file.contentsToByteArray();
-        Pair<JvmClassName, KotlinClassHeader> nameAndHeader = readClassNameAndHeader(fileContents);
-        if (nameAndHeader == null)
-            return null;
-        return new VirtualFileKotlinClass(file, nameAndHeader.first, nameAndHeader.second);
+        return create(file.contentsToByteArray(), new Function2<JvmClassName, KotlinClassHeader, VirtualFileKotlinClass>() {
+
+            @Override
+            public VirtualFileKotlinClass invoke(JvmClassName name, KotlinClassHeader header) {
+                return new VirtualFileKotlinClass(file, name, header);
+            }
+        });
     } catch (Throwable e) {
         LOG.warn(renderFileReadingErrorMessage(file));
         return null;
     }
 }
\ No newline at end of file