diff --git a/88531aa020df8df844b9eb5f68aa7553beb02801 b/c8b6376406a4e60da200f818de2624492d1ca7fb
index 88531aa020..c8b6376406 100644
--- a/88531aa020df8df844b9eb5f68aa7553beb02801
+++ b/c8b6376406a4e60da200f818de2624492d1ca7fb
@@ -1,7 +1,9 @@
 @Test
 public void parseWithoutParameter() throws SQLException {
-    MySqlStatementParser statementParser = new MySqlStatementParser(createShardingRule(), Collections.emptyList(), "DELETE FROM TABLE_XXX xxx WHERE field4<10 AND TABLE_XXX.field1=1 AND field5>10 AND xxx.field2 IN (1,3) AND field6<=10 AND field3 BETWEEN 5 AND 20 AND field7>=10");
+    ShardingRule shardingRule = createShardingRule();
+    List<Object> parameters = Collections.emptyList();
+    SQLStatementParser statementParser = new SQLStatementParser(DatabaseType.MySQL, shardingRule, parameters, new MySqlExprParser(shardingRule, parameters, "DELETE FROM TABLE_XXX xxx WHERE field4<10 AND TABLE_XXX.field1=1 AND field5>10 AND xxx.field2 IN (1,3) AND field6<=10 AND field3 BETWEEN 5 AND 20 AND field7>=10"));
     DeleteSQLContext sqlContext = (DeleteSQLContext) statementParser.parseStatement();
     assertDeleteStatement(sqlContext);
     assertThat(sqlContext.toSqlBuilder().toString(), is("DELETE FROM [Token(TABLE_XXX)] xxx WHERE field4<10 AND [Token(TABLE_XXX)].field1=1 AND field5>10 AND xxx.field2 IN (1,3) AND field6<=10 AND field3 BETWEEN 5 AND 20 AND field7>=10"));
 }
\ No newline at end of file